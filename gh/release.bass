(provide [create!]
  (use (*dir*/../gh))

  (def *repo*
    (next *stdin*))

  (def *access-token*
    (next *stdin*))

  (defn opts->flags [opts]
    (defn append-flag [fs k v]
      (let [flag (str "--" k)]
        (if (boolean? v)
          (conj fs flag)
          (conj fs flag v))))

    (reduce-kv append-flag [] opts))

  (defn create [tag target assets opts]
    (let [flags (-> {:repo *repo*
                     :target target
                     :title tag}
                    (merge opts)
                    opts->flags)
          args (append flags assets)]
    (from gh:cli
      (-> ($ gh release create $tag & $args)
          (with-env-var :GITHUB_TOKEN *access-token*)
          (response-from :stdout :unix-table)))))

  (defn create! args
    (-> (apply create args)
        run
        next
        first)))
